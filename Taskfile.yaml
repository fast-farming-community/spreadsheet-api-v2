version: '3'

vars:
  REL: "_build/prod/rel/fast_api"
  BIN: "{{.REL}}/bin/fast_api"

tasks:
  build-prod:
    env: { MIX_ENV: prod, MIX_QUIET: "1" }
    cmds:
      - task: stop-prod
      - MIX_ENV=prod mix release --overwrite --quiet
      - cp /home/cornix/opt/fast-api-v2/env.sh _build/prod/rel/fast_api/releases/*/env.sh
      - task: normalize-release-eol
      - task: start-prod

  normalize-release-eol:
    cmds:
      - |
        set -euo pipefail
        files=(
          "{{.REL}}/releases/"*/"env.sh"
          "{{.BIN}}"
          "{{.REL}}/bin/"*
        )
        for f in "${files[@]}"; do
          [ -f "$f" ] || continue
          sed -i 's/\r$//' "$f"
          chmod +x "$f"
        done

  start-prod:
    cmds:
      - |
        set -euo pipefail
        [ -x "{{.BIN}}" ] || { echo "Release not found. Run: task build-prod"; exit 1; }
        "{{.BIN}}" daemon

  stop-prod:
    cmds:
      - |
        set -euo pipefail
        if [ -x "{{.BIN}}" ]; then
          if "{{.BIN}}" stop >/dev/null 2>&1; then
            exit 0
          fi
        fi
        # Fallback: kill BEAMs related to this app
        pids=$(ps -eo pid,command | awk '/[f]ast_api.*erts|[e]lixir.*fast_api/ {print $1}')
        if [ -n "$pids" ]; then
          echo "Forcing stop PIDs: $pids"
          kill -TERM $pids 2>/dev/null || true
          sleep 2
          kill -KILL $pids 2>/dev/null || true
        fi

  restart-prod:
    cmds:
      - task: stop-prod
      - task: start-prod

  status:
    desc: "Show running BEAM processes for fast_api"
    cmds:
      - ps -eo pid,etime,cmd | egrep -i 'beam.smp|elixir' | egrep -i 'fast_api|erts' || true

  remote:
    desc: "Attach remote IEx to running node"
    cmds:
      - "{{.BIN}} remote"
